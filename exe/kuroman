#!/usr/bin/env ruby

# frozen_string_literal: true

require 'rubygems'
require 'commander/import'

require 'kuromd/config'
require 'kuromd/folder'
require 'kuromd/version'

OptionParser.accept Pathname do |path|
  Pathname.new path if path
end

program :name, 'kuroman'
program :version, Kuromd::VERSION
program :description, 'These scripts will help you manage things (ie Kuroman - Kuro \'manage\').'

global_option('-c', '--config FILE', 'load config data for your commands to use')

command :inbox do |c|
  c.syntax = 'kuroman inbox [options]'
  c.summary = 'Process a folder'
  c.description = 'This command will process an \'inbox\' of files.'
  c.example 'description', 'kuroman inbox'

  c.action do |_args, options|
    # attempt to read config if the global config file is set
    config = Kuromd::Config.new({ config_file: options.config })
    folder = Kuromd::Folder.new({ config: })

    if !folder.notes.count.zero?
      # display the table
      say folder.build_table

      continue = ask("Do you want to process #{folder.notes.count} notes? (y/n)")
      folder.process if continue.downcase! == 'y'
    else
      say('There are no files to process.')
    end
  end
end
