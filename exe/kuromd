#!/usr/bin/env ruby

# frozen_string_literal: true

require 'rubygems'
require 'commander/import'

require 'kuromd/configurable'
require 'kuromd/folder'
require 'kuromd/version'

require 'fileutils'
require 'pathname'

include Kuromd::Configurable

OptionParser.accept Pathname do |path|
  Pathname.new path if path
end

program :name, 'kuromd'
program :version, Kuromd::VERSION
program :description, 'The main entry point for the command line utility'

global_option('-c', '--config FILE', 'load config data for your commands to use')

command :notes do |c|
  c.syntax = 'kuromd notes [options]'
  c.summary = 'Process a folder of notes'
  c.description = 'This command will take a folder of markdown notes to process.'
  c.example 'description', 'kuromd notes'

  c.action do |_args, options|
    # attempt to read config if the global config file is set
    Kuromd::Configurable.configure({ config_file: options.config, key: 'notes' })
    # config = Kuromd::Config.new({ config_file: options.config })
    config = Kuromd::Configurable.get_config
    notes_folder = Kuromd::Folder.new

    # display the table
    puts notes_folder.build_table

    continue = ask("Do you want to process #{notes_folder.notes.count} notes? (y/n)")
    notes_folder.process if continue == 'y'
  end
end
